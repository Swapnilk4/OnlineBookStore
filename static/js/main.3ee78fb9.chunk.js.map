{"version":3,"sources":["components/header/Header.js","components/main/book-list/BookList.js","components/main/cart/Cart.js","components/main/order-success/OrderSuccess.js","components/main/Main.js","App.js","reportWebVitals.js","index.js"],"names":["Header","Navbar","style","color","backgroundColor","padding","fontFamily","textAlign","expand","NavbarBrand","Component","BookList","props","incrementCount","index","bookList","state","books","item","selectedCount","setState","sendBooks","sendData","filter","book","decrementCount","bookStyle","borderRadius","bookTitle","fontWeight","width","whiteSpace","overflow","textOverflow","author","fontSize","display","float","to","className","onClick","this","map","Card","Title","title","name","Body","Text","src","cursor","id","Cart","customerId","sendUpdatedBooks","sendDataToSuccessPage","selectedBooks","console","log","e","nextProps","Form","Group","controlId","Label","Control","type","placeholder","defaultValue","onChange","handleBookIdChange","Col","sm","Check","label","OrderSuccess","selectedBooksForOrder","Alert","variant","Heading","Main","getData","bind","getDataFromCart","val","StrictMode","exact","path","render","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.3ee78fb9.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n// reactstrap components\r\nimport {\r\n    NavbarBrand,\r\n    Navbar\r\n  } from \"reactstrap\";\r\n\r\nclass Header extends Component {\r\n    render() {\r\n        const mystyle = {\r\n            color: \"white\",\r\n            backgroundColor: \"#172b4d\",\r\n            padding: \"15px\",\r\n            fontFamily: \"Arial\",\r\n            textAlign:\"center\"\r\n          };\r\n        return (\r\n                <Navbar style={mystyle}  expand=\"lg\">\r\n                    <NavbarBrand>\r\n                       Online Book Store\r\n                    </NavbarBrand>\r\n                </Navbar>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","import React, { Component } from 'react';\r\nimport Card from 'react-bootstrap/Card';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass BookList extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            books: this.props.books\r\n        };\r\n    }\r\n\r\n    incrementCount = (index) => {\r\n         let bookList = [...this.state.books];\r\n         let item = {...bookList[index]};\r\n         item.selectedCount += 1;\r\n         bookList[index] = item;\r\n         this.setState({books:bookList});\r\n      };\r\n\r\n    sendBooks = () => {\r\n        this.props.sendData(this.state.books.filter(book=> book.selectedCount > 0));\r\n    };\r\n\r\n    decrementCount = (index) => {\r\n    let bookList = [...this.state.books];\r\n    let item = {...bookList[index]};\r\n    item.selectedCount = item.selectedCount ? item.selectedCount - 1 :item.selectedCount;\r\n    bookList[index] = item;\r\n    this.setState({books:bookList});\r\n };\r\n    render() {\r\n        const caption ={\r\n            padding:'20px  20px 0 20px',\r\n            fontSize:'18px',\r\n            fontWeight:'bold'\r\n        }\r\n        const bookListStyle = {\r\n            padding:'20px 20px',\r\n        }\r\n\r\n        const bookStyle = {\r\n            borderRadius: '5px',\r\n            padding:'8px'\r\n        }\r\n\r\n        const bookTitle= {\r\n            fontWeight: 'bold',\r\n            width: '250px',\r\n            whiteSpace: 'nowrap',\r\n            overflow: 'hidden',\r\n            textOverflow: 'ellipsis'\r\n        } \r\n\r\n        const author = {\r\n            width: '250px',\r\n            whiteSpace: 'nowrap',\r\n            overflow: 'hidden',\r\n            textOverflow: 'ellipsis'\r\n        }\r\n     \r\n\r\n        return (\r\n            <div>\r\n                <div style={caption}> \r\n                <div style={{ display:'inline-block' }}> Books </div> \r\n                <div  style={{ float:'right', display:'inline-block' }}> \r\n                     {/* <Button variant=\"primary\" className=\"btn-primary\" onClick={this.addToCart}>Add to Cart</Button> */}\r\n                     <Link to=\"/cart\" className=\"btn-primary\" onClick={this.sendBooks}>Add to Cart</Link>\r\n\r\n                </div>\r\n                </div>\r\n                <div className=\"row\" style={bookListStyle}>\r\n                    {this.state.books.map((book, index) => {\r\n                    \r\n                    return (\r\n                    <div key={book.id} className=\"col-md-3\" style={bookStyle}>\r\n                    <Card style={{padding:'8px'}}>\r\n                    <Card.Title style={bookTitle} title={book.name}> {book.name}</Card.Title>\r\n                    <Card.Body>\r\n                    <Card.Text style={author} title={book.author}>\r\n                    {book.author}\r\n                    </Card.Text>\r\n                        <div>  \r\n                            <img src=\"images/minus.svg\" width=\"15px\" style={{ cursor: 'pointer'}} onClick={()=> {this.decrementCount(index)}}/>\r\n                            <span style={{padding:' 0 10px'}}> {book.selectedCount}</span> \r\n                            <img src=\"images/plus.svg\"  width=\"15px\" style={{ cursor: 'pointer'}}  onClick={()=> {this.incrementCount(index)}}/>\r\n                        </div>\r\n\r\n                    </Card.Body>\r\n                    </Card>\r\n                    </div>\r\n                    )})}\r\n                </div>\r\n             </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default BookList;","import React, { Component } from 'react';\r\nimport {  Link } from 'react-router-dom';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Col from 'react-bootstrap/Col';\r\n\r\n\r\nclass Cart extends Component {\r\n    customerId ='admin_123';\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            selectedBooks : this.props.selectedBooks \r\n        };\r\n\r\n        console.log(\"ss\", this.state);\r\n    }\r\n    handleBookIdChange(e) {\r\n        // console.log('event', e);\r\n        // console.log('event2', this.props);\r\n    }\r\n\r\n    sendUpdatedBooks = () => {\r\n        this.props.sendDataToSuccessPage(this.state.selectedBooks.filter(book=> book.selectedCount > 0));\r\n    };\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        // You don't have to do this check first, but it can help prevent an unneeded render\r\n       // if (nextProps.startTime !== this.state.startTime) {\r\n          this.setState({ selectedBooks: nextProps.selectedBooks });\r\n        //}\r\n        console.log(\"ss2\", this.state);\r\n      }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"form-container col-md-4\">\r\n                  <Form>\r\n                      <div className=\"fields-container\">\r\n                    {this.state.selectedBooks.map((book,index) => (\r\n                       \r\n                    <div key={`form-${book.id}`} >\r\n                        <div style={{textAlign:'center',fontWeight:'bolder'}}> Book {index +1 }</div>\r\n                        <Form.Group controlId=\"formBasicEmail\">\r\n                            <Form.Label style={{fontWeight:'bolder'}}>Book Id</Form.Label>\r\n                            <Form.Control type=\"input\" placeholder=\"Enter Book Id\" defaultValue={book.id} onChange={(e) => this.handleBookIdChange(e)} />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId=\"formBasicPassword\">\r\n                            <Form.Label style={{fontWeight:'bolder'}}>Customer Id</Form.Label>\r\n                            <Form.Control type=\"input\" placeholder=\"Enter Customer Id\" defaultValue ={this.customerId} />\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"formBasicPassword\">\r\n                            <Form.Label style={{fontWeight:'bolder'}}>Quantity</Form.Label>\r\n                            <Form.Control type=\"input\" placeholder=\"Enter Quantity\" defaultValue ={book.selectedCount} />\r\n                        </Form.Group>\r\n                        </div>\r\n                        ))}\r\n                        </div>\r\n                        <Form.Group controlId=\"formBasicCheckbox\">\r\n                           <div style={{fontWeight:'bolder'}}>Payment Mode</div>\r\n\r\n                           <Col sm={10}>\r\n                                    <Form.Check\r\n                                    type=\"radio\"\r\n                                    label=\"Google Pay\"\r\n                                    name=\"formHorizontalRadios\"\r\n                                    id=\"formHorizontalRadios1\"\r\n                                    />\r\n                                    <Form.Check\r\n                                    type=\"radio\"\r\n                                    label=\"Debit Card\"\r\n                                    name=\"formHorizontalRadios\"\r\n                                    id=\"formHorizontalRadios2\"\r\n                                    />\r\n                                    <Form.Check\r\n                                    type=\"radio\"\r\n                                    label=\"Credit Card\"\r\n                                    name=\"formHorizontalRadios\"\r\n                                    id=\"formHorizontalRadios3\"\r\n                                    />\r\n                                </Col> \r\n                        </Form.Group>\r\n                        {/* <Button variant=\"primary\" type=\"submit\">\r\n                            Submit\r\n                        </Button> */}\r\n                        <Link to=\"/order-success\"className=\"btn-primary\" onClick={this.sendUpdatedBooks}>Place Order</Link>\r\n                </Form> \r\n            </div>\r\n        <div>      \r\n    </div>\r\n   </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Cart;","import React from 'react';\r\nimport Alert from 'react-bootstrap/Alert';\r\n\r\n\r\nfunction OrderSuccess(props) {\r\n  \r\n    let state = props.selectedBooksForOrder;\r\n    console.log('state', state);\r\n    return (\r\n        <div>\r\n            <Alert variant=\"success\"  className=\"col-md-4\">\r\n                <Alert.Heading>Thank You !!!!</Alert.Heading>\r\n                <p>\r\n                    Your order has been placed successfully !!! \r\n                </p>\r\n            </Alert>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default OrderSuccess;","import BookList from \"./book-list/BookList\";\r\nimport Cart from \"./cart/Cart\";\r\nimport OrderSuccess from \"./order-success/OrderSuccess\";\r\nimport { Route, Switch, HashRouter as Router} from 'react-router-dom';\r\nimport React, { Component } from 'react';\r\nimport books from '../../books.json';\r\n\r\n\r\nclass Main extends Component{\r\n    \r\n    constructor(props){\r\n      super(props);\r\n      this.getData = this.getData.bind(this);\r\n      this.getDataFromCart = this.getDataFromCart.bind(this);\r\n      this.state = {\r\n        selectedBooks:[],\r\n        selectedBooksForOrder:[]\r\n      }\r\n    }\r\n\r\n    getData(val){\r\n      // do not forget to bind getData in constructor\r\n      this.setState({selectedBooks: val});\r\n    }\r\n\r\n    \r\n    getDataFromCart(val){\r\n      this.setState({selectedBooksForOrder: val});\r\n    }\r\n    \r\n    render(){\r\n      return (\r\n\r\n            <div> \r\n                <Router>\r\n                    <React.StrictMode>\r\n                    <Switch>\r\n                        {/* <Route exact path=\"/\" component={BookList} /> */}\r\n                        <Route exact path=\"/\" render={props=><BookList { ...props } sendData={this.getData}  books={books}/>}/>\r\n                        <Route path=\"/cart\"   render={props=><Cart { ...props} selectedBooks={this.state.selectedBooks} sendDataToSuccessPage={this.getDataFromCart}/>}/>\r\n                        <Route path=\"/order-success\"  render={props=><OrderSuccess { ...props} selectedBooksForOrder={this.state.selectedBooksForOrder} />}/>\r\n                    </Switch>\r\n                    </React.StrictMode>\r\n                </Router>\r\n      </div>\r\n     \r\n    );\r\n  }\r\n}\r\n  export default Main;","import './App.css';\nimport Header from './components/header/Header';\nimport Main from './components/main/Main';\n\nfunction App() {\n  return (\n      <div>\n          <Header/>\n          <Main/>\n      </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}